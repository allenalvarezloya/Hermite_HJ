function [Vs] = smooth_visc(V,s,CASE)
Vs = zeros(size(s));
    % Middle
    for k = 1:length(s)-2
        for l = 1:length(s)-2
            Vs(1+k,1+l) = 1/16*(V(1+k-1,1+l-1)+V(1+k+1,1+l-1)+V(1+k-1,1+l+1)+V(1+k+1,1+l+1)+...
                2*(V(1+k,1+l-1)+V(1+k-1,1+l)+V(1+k+1,1+l)+V(1+k,1+l+1))+...
                4*V(1+k,1+l));
        end
    end
    if CASE == 1
        % Left side
        for l = 1:length(s)-2
            Vs(1,1+l) = 1/16*(V(end,1+l-1)+V(2,1+l-1)+V(end,1+l+1)+V(2,1+l+1)+...
                2*(V(1,1+l-1)+V(end,1+l)+V(2,1+l)+V(1,1+l+1))+...
                4*V(1,1+l));
        end
        % Right side
        for l = 1:length(s)-2
            Vs(end,1+l) = 1/16*(V(end-1,1+l-1)+V(1,1+l-1)+V(end-1,1+l+1)+V(1,1+l+1)+...
                2*(V(end,1+l-1)+V(end-1,1+l)+V(1,1+l)+V(end,1+l+1))+...
                4*V(end,1+l));
        end
        % Bottom side
        for k = 1:length(s)-2
             Vs(1+k,1) = 1/16*(V(1+k-1,end)+V(1+k+1,end)+V(1+k-1,2)+V(1+k+1,2)+...
                2*(V(1+k,end)+V(1+k-1,1)+V(1+k+1,1)+V(1+k,2))+...
                4*V(1+k,1));
        end
        % Top side
        for k = 1:length(s)-2
            Vs(1+k,end) = 1/16*(V(1+k-1,end-1)+V(1+k+1,end-1)+V(1+k-1,1)+V(1+k+1,l)+...
                2*(V(1+k,end-1)+V(1+k-1,end)+V(1+k+1,end)+V(1+k,1))+...
                4*V(1+k,end));
        end
        % Bottom left 
        Vs(1,1) = 1/16*(V(end,end)+V(2,end)+V(end,2)+V(2,2)+...
            2*(V(1,end)+V(end,1)+V(end,1)+V(1,end))+...
            4*V(1,1));
        % Top left 
        Vs(1,end) = 1/16*(V(end,end-1)+V(2,end-1)+V(end,1)+V(2,1)+...
            2*(V(1,end-1)+V(end,end)+V(2,end)+V(1,1))+...
            4*V(1,end));
        % Bottom right
        Vs(end,1) = 1/16*(V(end-1,end)+V(1,end)+V(end-1,2)+V(1,2)+...
            2*(V(end,end)+V(end-1,1)+V(1,1)+V(end,2))+...
            4*V(end,1));
        % Top right
        Vs(end,end) = 1/16*(V(end-1,end-1)+V(1,end-1)+V(end-1,1)+V(1,1)+...
            2*(V(end,end-1)+V(end-1,end)+V(1,end)+V(end,1))+...
            4*V(end,end));
    elseif CASE == 2
        % Left side
       for l = 1:length(s)-2
            Vs(1,1+l) = 1/16*(V(end-1,1+l-1)+V(2,1+l-1)+V(end-1,1+l+1)+V(2,1+l+1)+...
                2*(V(1,1+l-1)+V(end-1,1+l)+V(2,1+l)+V(1,1+l+1))+...
                4*V(1,1+l));
       end
        % Right side
        for l = 1:length(s)-2
            Vs(end,1+l) = 1/16*(V(end-1,1+l-1)+V(2,1+l-1)+V(end-1,1+l+1)+V(2,1+l+1)+...
                2*(V(end,1+l-1)+V(end-1,1+l)+V(2,1+l)+V(end,1+l+1))+...
                4*V(end,1+l));
        end
        % Bottom side
        for k = 1:length(s)-2
             Vs(1+k,1) = 1/16*(V(1+k-1,end-1)+V(1+k+1,end-1)+V(1+k-1,2)+V(1+k+1,2)+...
                2*(V(1+k,end-1)+V(1+k-1,1)+V(1+k+1,1)+V(1+k,2))+...
                4*V(1+k,1));
        end
        % Top side
        for k = 1:length(s)-2
            Vs(1+k,end) = 1/16*(V(1+k-1,end-1)+V(1+k+1,end-1)+V(1+k-1,2)+V(1+k+1,2)+...
                2*(V(1+k,end-1)+V(1+k-1,end)+V(1+k+1,end)+V(1+k,2))+...
                4*V(1+k,end));
        end
        % Bottom left 
        Vs(1,1) = 1/16*(V(end-1,end-1)+V(2,end-1)+V(end-1,2)+V(2,2)+...
            2*(V(1,end-1)+V(end-1,1)+V(end-1,1)+V(1,end-1))+...
            4*V(1,1));
        
        % Top left
        Vs(1,end) = 1/16*(V(end-1,end-1)+V(2,end-1)+V(end-1,2)+V(2,2)+...
            2*(V(1,end-1)+V(end-1,end)+V(end-1,end)+V(1,2))+...
            4*V(1,end));
        % Bottom right
        Vs(end,1) = 1/16*(V(end-1,end-1)+V(1,end-1)+V(end-1,2)+V(2,2)+...
            2*(V(end,end-1)+V(end-1,1)+V(2,1)+V(end,2))+...
            4*V(end,1));
        % Top right
        Vs(end,end) = 1/16*(V(end-1,end-1)+V(2,end-1)+V(end-1,2)+V(2,2)+...
            2*(V(end,end-1)+V(end-1,end)+V(2,end)+V(end,2))+...
            4*V(end,end));
    end
end